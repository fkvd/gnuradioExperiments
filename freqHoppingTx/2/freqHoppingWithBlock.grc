options:
  parameters:
    author: fkvd
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: qt_gui
    hier_block_src_path: '.:'
    id: txpluto
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Time switched selector block usage
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: int(2e6)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 12.0]
    rotation: 0
    state: enabled
- name: tx_frequency
  id: variable
  parameters:
    comment: Do not change!
    value: '433900000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [312, 12.0]
    rotation: 0
    state: true
- name: tx_power
  id: variable_qtgui_range
  parameters:
    comment: Higher values transmit with lower power
    gui_hint: ''
    label: Transmit power
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '1.00'
    step: '1'
    stop: '70.0'
    value: '30.0'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [432, 16.0]
    rotation: 0
    state: true
- name: analog_sig_source_x_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '1'
    comment: ''
    freq: '1000'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: samp_rate
    type: complex
    waveform: analog.GR_COS_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [96, 168.0]
    rotation: 0
    state: true
- name: analog_sig_source_x_0_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '1'
    comment: ''
    freq: '10000'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: samp_rate
    type: complex
    waveform: analog.GR_COS_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [96, 320.0]
    rotation: 0
    state: enabled
- name: analog_sig_source_x_0_0_0
  id: analog_sig_source_x
  parameters:
    affinity: ''
    alias: ''
    amp: '1'
    comment: ''
    freq: '20000'
    maxoutbuf: '0'
    minoutbuf: '0'
    offset: '0'
    phase: '0'
    samp_rate: samp_rate
    type: complex
    waveform: analog.GR_COS_WAVE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [96, 472.0]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nimport timeit\n\n\
      class blk(gr.sync_block):\n\t\"\"\" Selector with time - This blocks choose\
      \ next input after timeout occurs\n\tYou can change number of parameters by\
      \ editing default value of numInputs\n\tNote: This is not a time precise block\n\
      \t\"\"\"\n\n\tdef __init__(self, timeout=1):\n\t\n\t\tnumInputs = 3\t# You can\
      \ change this parameter\n\t\t\n\t\tgr.sync_block.__init__(\n\t\t\tself,\n\t\t\
      \tname='Selector with time',\n\t\t\tin_sig=[np.complex64 for x in range(numInputs)],\n\
      \t\t\tout_sig=[np.complex64]\n\t\t)\n\t\tself.timeout = timeout\n\t\tself.numInputs\
      \ = numInputs\n\t\tself.startTime = timeit.default_timer()\n\t\tself.currentIndex\
      \ = 0\n\n\tdef work(self, input_items, output_items):\n\t\tcurrentTime = timeit.default_timer()\n\
      \t\ttimeDiff = currentTime - self.startTime\n\t\tif timeDiff > self.timeout:\n\
      \t\t\tself.currentIndex = (self.currentIndex + 1) % self.numInputs\n\t\t\tself.startTime\
      \ = currentTime\n\t\t\n\t\toutput_items[0][:] = input_items[self.currentIndex]\n\
      \t\t\n\t\treturn len(output_items[0])\n\t\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    timeout: '0.1'
  states:
    _io_cache: '(''Selector with time'', ''blk'', [(''timeout'', ''1'')], [(''0'',
      ''complex'', 1), (''1'', ''complex'', 1), (''2'', ''complex'', 1)], [(''0'',
      ''complex'', 1)], '' Selector with time - This blocks choose next input after
      timeout occurs\n\tYou can change number of parameters by editing default value
      of numInputs\n\tNote: This is not a time precise block\n\t'', [''timeout''])'
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [400, 344.0]
    rotation: 0
    state: enabled
- name: iio_pluto_sink_0
  id: iio_pluto_sink
  parameters:
    affinity: ''
    alias: ''
    attenuation1: tx_power
    bandwidth: '200000'
    buffer_size: '32768'
    comment: ''
    cyclic: 'False'
    filter: ''
    filter_source: '''Auto'''
    fpass: '0'
    frequency: tx_frequency
    fstop: '0'
    len_tag_key: ''
    samplerate: samp_rate
    type: fc32
    uri: 192.168.2.1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [904, 300.0]
    rotation: 0
    state: true
- name: low_pass_filter_0
  id: low_pass_filter
  parameters:
    affinity: ''
    alias: ''
    beta: '6.76'
    comment: ''
    cutoff_freq: '100000'
    decim: '1'
    gain: '1'
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    samp_rate: samp_rate
    type: fir_filter_ccf
    width: '10000'
    win: window.WIN_HAMMING
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [656, 312.0]
    rotation: 0
    state: true

connections:
- [analog_sig_source_x_0, '0', epy_block_0, '0']
- [analog_sig_source_x_0_0, '0', epy_block_0, '1']
- [analog_sig_source_x_0_0_0, '0', epy_block_0, '2']
- [epy_block_0, '0', low_pass_filter_0, '0']
- [low_pass_filter_0, '0', iio_pluto_sink_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.3.0
